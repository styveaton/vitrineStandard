
// import VueCookies from 'vue-cookies'
import { ref } from 'vue';
   

export class FormatData {
  


  verifNumber = function (number) {
    let taille = number.split('').length;

    for (var i = 0; i < 100 * taille; i++) {

      console.log('f', parseInt(number[i]), Number.isInteger(parseInt(number[i])));

      if (Number.isInteger(parseInt(number[i])) || number[i] == ';') {
        console.log('pas modif', typeof parseInt(number[i]));

      }
      else {

        console.log('modifi', 'number');


        number = number.replace(number[i], '');

      }
 
    }
    return number;
     
  };
       
  verifMessage = (data) => {
    const caracteres = ref([
      '!',
      '«',
      '#',/* 
      '%', */
      '&',
      '`',
      '(',
      ')',
      '*',
      '+',
      ',',
      '-',
      '/',
      '{',
      '|',
      '}',
      '~',
      '[',
      '""',
      ']',
      '^',
      '0',
      '1',
      '2',
      '3',
      '4',
      '5',
      '6',
      '7',
      '8',
      '9',
      ':',
      ';',
      '<',
      '=',
      '>',
      '?',
      '@',
      'A',
      'B',
      'C',
      'D',
      'E',
      'F',
      'G',
      'H',
      'I',
      'J',
      'K',
      'L',
      'M',
      'N',
      'O',
      'P',
      'Q',
      'R',
      'S',
      'T',
      'U',
      'V',
      'W',
      'X',
      'Y',
      'Z',
      '-',
      'a',
      'b',
      'c',
      'd',
      'e',
      'f',
      'g',
      'h',
      'i',
      'j',
      'k',
      'l',
      'm',
      'n',
      'o',
      'p',
      'q',
      'r',
      's',
      't',
      'u',
      'v',
      'w',
      'x',
      'y',
      'z',
      '£',
      '€',
      '¥',
      '§',
      '¿',
      'Ä',
      'Å',
      'Æ',
      'Ç',
      'È',
      'É',
      'Ñ',
      'Ö',
      'Ø',
      'Ü',
      'ß',
      'à',
      'ä',
      'å',
      'æ',
      'è',
      'é',
      'ì',
      'ñ',
      'ò',
      'ö',
      'ø',
      'ù',
      'Ü',
      '€',
    ]);

    const caracteresIso = ref([
    
      '%21',
      '%22',
      '%23',/* 
      '%25', */
      '%26',
      '%27',
      '%28',
      '%29',
      '*',
      '%2B',
      '%2C',
      '-',
      '%2F',
      '%7B',
      '%7C',
      '%7D',
      '%7E',
      '%5B',
      '%5C',
      '%5D',
      '%5E',
      '0',
      '1',
      '2',
      '3',
      '4',
      '5',
      '6',
      '7',
      '8',
      '9',
      '%3A',
      '%3B',
      '%3C',
      '%3D',
      '%3E',
      '%3F',
      '%40',
      'A',
      'B',
      'C',
      'D',
      'E',
      'F',
      'G',
      'H',
      'I',
      'J',
      'K',
      'L',
      'M',
      'N',
      'O',
      'P',
      'Q',
      'R',
      'S',
      'T',
      'U',
      'V',
      'W',
      'X',
      'Y',
      'Z',
      '-',
      'a',
      'b',
      'c',
      'd',
      'e',
      'f',
      'g',
      'h',
      'i',
      'j',
      'k',
      'l',
      'm',
      'n',
      'o',
      'p',
      'q',
      'r',
      's',
      't',
      'u',
      'v',
      'w',
      'x',
      'y',
      'z',
      '%A3',
      '%A4',
      '%A5',
      '%A7',
      '%BF',
      'A',
      'A',
      'A',
      'C',
      'E',
      'E',
      'N',
      'O',
      'O',
      'U',
      'B',
      'a',
      'a', 'a', 'a',
      'e',
      'e',
      
      'i',
      'n',
      'o',
      'o',
      'o',

      'u',
      'u',
      '%80',
    ]);
    // for (let i = 0; i < caracteresIso.value.length; i++) {
    //   console.log(caracteres.value[i], caracteresIso.value[i]);
    // }
    // const taille = data.split('').length;

    caracteres.value.forEach((string, index) => {
      if (data.includes(string)) {
        data = this.replaceAll(data, string, caracteresIso.value[index]);
      }
    });
   
    return data;
  };

      
  verifMessage2 = (data) => {
    const caracteres = ref([
      '!',
      '«',
      '#',/* 
      '%', */
      '&',
      '`',
      '(',
      ')',
      '*',
      '+',
      ',',
      '-',
      '/',
      '{',
      '|',
      '}',
      '~',
      '[',
      '""',
      ']',
      '^',
      '0',
      '1',
      '2',
      '3',
      '4',
      '5',
      '6',
      '7',
      '8',
      '9',
      ':',
      ';',
      '<',
      '=',
      '>',
      '?',
      '@',
      'A',
      'B',
      'C',
      'D',
      'E',
      'F',
      'G',
      'H',
      'I',
      'J',
      'K',
      'L',
      'M',
      'N',
      'O',
      'P',
      'Q',
      'R',
      'S',
      'T',
      'U',
      'V',
      'W',
      'X',
      'Y',
      'Z',
      '-',
      'a',
      'b',
      'c',
      'd',
      'e',
      'f',
      'g',
      'h',
      'i',
      'j',
      'k',
      'l',
      'm',
      'n',
      'o',
      'p',
      'q',
      'r',
      's',
      't',
      'u',
      'v',
      'w',
      'x',
      'y',
      'z',
      '£',
      '€',
      '¥',
      '§',
      '¿',
      'Ä',
      'Å',
      'Æ',
      'Ç',
      'È',
      'É',
      'Ñ',
      'Ö',
      'Ø',
      'Ü',
      'ß',
      'à',
      'ä',
      'å',
      'æ',
      'è',
      'é',
      'ì',
      'ñ',
      'ò',
      'ö',
      'ø',
      'ù',
      'Ü',
      '€',
    ]);

    const caracteresIso = ref([
     
      '%21',
      '%22',
      '#',/* 
      '%25', */
      '%26',
      '%27',
      '%28',
      '%29',
      '*',
      '%2B',
      '%2C',
      '-',
      '%2F',
      '%7B',
      '%7C',
      '%7D',
      '%7E',
      '%5B',
      '%5C',
      '%5D',
      '%5E',
      '0',
      '1',
      '2',
      '3',
      '4',
      '5',
      '6',
      '7',
      '8',
      '9',
      '%3A',
      '%3B',
      '%3C',
      '%3D',
      '%3E',
      '%3F',
      '%40',
      'A',
      'B',
      'C',
      'D',
      'E',
      'F',
      'G',
      'H',
      'I',
      'J',
      'K',
      'L',
      'M',
      'N',
      'O',
      'P',
      'Q',
      'R',
      'S',
      'T',
      'U',
      'V',
      'W',
      'X',
      'Y',
      'Z',
      '-',
      'a',
      'b',
      'c',
      'd',
      'e',
      'f',
      'g',
      'h',
      'i',
      'j',
      'k',
      'l',
      'm',
      'n',
      'o',
      'p',
      'q',
      'r',
      's',
      't',
      'u',
      'v',
      'w',
      'x',
      'y',
      'z',
      '%A3',
      '%A4',
      '%A5',
      '%A7',
      '%BF',
      'A',
      'A',
      'A',
      'C',
      'E',
      'E',
      'N',
      'O',
      'O',
      'U',
      'B',
      'a',
      'a', 'a', 'a',
      'e',
      'e',
      
      'i',
      'n',
      'o',
      'o',
      'o',

      'u',
      'u',
      '%80',
    ]);
    // for (let i = 0; i < caracteresIso.value.length; i++) {
    //   console.log(caracteres.value[i], caracteresIso.value[i]);
    // }
    // const taille = data.split('').length;

    caracteres.value.forEach((string, index) => {
      if (data.includes(string)) {
        data = this.replaceAll(data, string, caracteresIso.value[index]);
      } else {
       return   data 
      }
    });
   
    return data;
  };
  replaceAll = (str, find, replace) => {
    return str.replace(new RegExp(find, 'gi'), replace);
  }
}

 
 
